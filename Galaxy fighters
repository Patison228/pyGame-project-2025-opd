import pygame
pygame.font.init()
pygame.mixer.init()
WIDTH,HEIGHT = 800,600
WIN = pygame.display.set_mode((WIDTH,HEIGHT))
pygame.display.set_caption("Second game")
FPS = 60
PLAYER_VEL=5
BULLET_VEL=7
MAX_BULLETS = 3
BULLET_HIT_SOUND = pygame.mixer.Sound("Assets/Grenade+1.mp3")
BULLET_FIRE_SOUND = pygame.mixer.Sound("Assets/Gun+Silencer.mp3")
WINNER_FONT = pygame.font.SysFont("comicsans",35)
YELLOW_HIT = pygame.USEREVENT + 1
RED_HIT = pygame.USEREVENT +2
SPACESHIP_WIDTH,SPACESHIP_HEIGHT = 60,50
YELLOW_SPACESHIP_IMAGE = pygame.image.load("Assets/spaceship_yellow.png")
YELLOW_SPACESHIP = pygame.transform.rotate(pygame.transform.scale(YELLOW_SPACESHIP_IMAGE, (SPACESHIP_WIDTH,SPACESHIP_HEIGHT)), 90)
BORDER = pygame.Rect(WIDTH//2,0,10,HEIGHT)
FONT = pygame.font.SysFont("comicsans", 40)
SPACE = pygame.transform.scale(pygame.image.load("Assets/space.png"), (WIDTH,HEIGHT))

RED_SPACESHIP_IMAGE = pygame.image.load("Assets/spaceship_red.png")
RED_SPACESHIP = pygame.transform.rotate(pygame.transform.scale(RED_SPACESHIP_IMAGE, (SPACESHIP_WIDTH,SPACESHIP_HEIGHT)),270)
def draw_everything(red,yellow,red_bullets,yellow_bullets,red_health,yellow_health):
    WIN.blit(SPACE, (0,0))
    pygame.draw.rect(WIN, "black", BORDER)
    red_health_text = FONT.render("Red health: "+ str(red_health), 1 , "white")
    yellow_health_text = FONT.render("Yellow health: "+ str(yellow_health), 1 , "white")
    WIN.blit(red_health_text, (WIDTH-red_health_text.get_width()-10,10))
    WIN.blit(yellow_health_text, (10,10))
    WIN.blit(YELLOW_SPACESHIP, (yellow.x,yellow.y))
    WIN.blit(RED_SPACESHIP, (red.x,red.y))
    for bullet in red_bullets:
        pygame.draw.rect(WIN, "red", bullet)
    for bullet in yellow_bullets:
        pygame.draw.rect(WIN, "yellow", bullet)
    pygame.display.update()

def yellow_movement(keys,yellow):
    if keys[pygame.K_a] and yellow.x-PLAYER_VEL > 0:
        yellow.x -= PLAYER_VEL
    if keys[pygame.K_w] and yellow.y - PLAYER_VEL > 0:
        yellow.y -= PLAYER_VEL
    if keys[pygame.K_s] and yellow.y + PLAYER_VEL + yellow.height < HEIGHT:
        yellow.y += PLAYER_VEL
    if keys[pygame.K_d] and yellow.x + PLAYER_VEL + yellow.width < BORDER.x:
        yellow.x += PLAYER_VEL

def red_movement(keys,red):
    if keys[pygame.K_LEFT] and red.x-PLAYER_VEL > BORDER.x + BORDER.width:
        red.x -= PLAYER_VEL
    if keys[pygame.K_UP] and red.y - PLAYER_VEL > 0:
        red.y -= PLAYER_VEL
    if keys[pygame.K_DOWN] and red.y + PLAYER_VEL + red.height < HEIGHT:
        red.y += PLAYER_VEL
    if keys[pygame.K_RIGHT] and red.x + PLAYER_VEL + red.width < WIDTH:
        red.x += PLAYER_VEL

def handle_bullets(yellow_bullets,red_bullets,yellow,red):
    for bullet in yellow_bullets:
        bullet.x += BULLET_VEL
        if red.colliderect(bullet):
            pygame.event.post(pygame.event.Event(RED_HIT))
            yellow_bullets.remove(bullet)
        elif bullet.x > WIDTH:
            yellow_bullets.remove(bullet)

    for bullet in red_bullets:
        bullet.x -= BULLET_VEL
        if yellow.colliderect(bullet):
            pygame.event.post(pygame.event.Event(YELLOW_HIT))
            red_bullets.remove(bullet)
        elif bullet.x < 0:
            red_bullets.remove(bullet)

def draw_winner(text):
    draw_text = WINNER_FONT.render(text, 1, "white")
    WIN.blit(draw_text, (WIDTH/2 - draw_text.get_width()/2, HEIGHT/2 - draw_text.get_height()/2))
    pygame.display.update()
    pygame.time.delay(5000)

def main():
    red_health = 100
    yellow_health = 100
    red_bullets = []
    yellow_bullets = []
    red = pygame.Rect(500,300, SPACESHIP_WIDTH,SPACESHIP_HEIGHT)
    yellow = pygame.Rect(100,300, SPACESHIP_WIDTH,SPACESHIP_HEIGHT)
    clock = pygame.time.Clock()
    run = True
    while run:
        clock.tick(FPS) #locked fps no matter what i do
        keys = pygame.key.get_pressed()
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                run = False
                break
            if event.type == pygame.KEYDOWN:
                if event.key  == pygame.K_LCTRL and len(yellow_bullets) < MAX_BULLETS:
                    #Откуда пулька идёт это первые два значения
                    bullet = pygame.Rect(yellow.x + yellow.width, yellow.y + yellow.height//2 - 2,10,5) #размер пульки последние две
                    yellow_bullets.append(bullet)
                    BULLET_FIRE_SOUND.play()
                if event.key == pygame.K_RCTRL and len(red_bullets) < MAX_BULLETS:
                    bullet = pygame.Rect(red.x + red.width, red.y + red.height//2 ,10,5) #размер пульки последние две
                    red_bullets.append(bullet)
                    BULLET_FIRE_SOUND.play()

            if event.type == RED_HIT:
                red_health -=10
                BULLET_HIT_SOUND.play()
            if event.type == YELLOW_HIT:
                yellow_health -= 10
                BULLET_HIT_SOUND.play()
        winner_text = ""
        if red_health <= 0:
            winner_text = "Yellow wins!"
        if yellow_health <=0:
            winner_text = "Red wins!"
        if winner_text != "":
            draw_winner(winner_text)
            break
        yellow_movement(keys,yellow)
        red_movement(keys,red)

        handle_bullets(yellow_bullets,red_bullets,yellow,red)


        draw_everything(red,yellow, red_bullets,yellow_bullets,red_health,yellow_health)
        if keys[pygame.K_ESCAPE]:
            run = False
            break
    pygame.quit()

if __name__ == "__main__": #Only to start this file
    main()
